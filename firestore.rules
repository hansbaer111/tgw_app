rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- TEMPORARILY PERMISSIVE READ RULES ---
    match /{collection}/{docId} {
      allow read: if request.auth.uid != null;
    }

    // --- ORIGINAL, SECURE WRITE RULES ---
    match /users/{userId} {
      allow create: if isOwner(userId);
      allow update: if (isOwner(userId) && request.resource.data.keys().hasOnly(['displayName', 'equipment'])) || isAdmin();
    }

    match /workout_logs/{logId} {
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isOwner(resource.data.userId) || isAdmin();
    }

    match /client_plans/{planId} {
      allow write: if isAdmin();
    }

    match /workout_templates/{templateId} {
      allow write: if isAdmin();
    }

    match /admin_attributes/{docId} {
      allow write: if isAdmin();
    }

    match /exercises/{exerciseId} {
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.canCreateExercises == true && isOwner(request.resource.data.ownerId);
      allow update, delete: if isAdmin() || isOwner(resource.data.ownerId);
    }
  }
}