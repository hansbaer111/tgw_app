// Mocks generated by Mockito 5.4.6 from annotations
// in test_app/test/authentication_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:test_app/models/admin_attributes_model.dart' as _i4;
import 'package:test_app/models/client_plan_model.dart' as _i8;
import 'package:test_app/models/conversation_model.dart' as _i11;
import 'package:test_app/models/exercise_model.dart' as _i10;
import 'package:test_app/models/user_model.dart' as _i3;
import 'package:test_app/models/workout_log_model.dart' as _i9;
import 'package:test_app/models/workout_template_model.dart' as _i5;
import 'package:test_app/services/database_service.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredential_0 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAdminAttributesModel_2 extends _i1.SmartFake
    implements _i4.AdminAttributesModel {
  _FakeAdminAttributesModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWorkoutTemplateModel_3 extends _i1.SmartFake
    implements _i5.WorkoutTemplateModel {
  _FakeWorkoutTemplateModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i6.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.UserCredential> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #signIn,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i2.UserCredential>);

  @override
  _i7.Future<_i2.UserCredential> register({
    required String? email,
    required String? password,
    required String? displayName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #email: email,
            #password: password,
            #displayName: displayName,
          },
        ),
        returnValue: _i7.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #register,
            [],
            {
              #email: email,
              #password: password,
              #displayName: displayName,
            },
          ),
        )),
      ) as _i7.Future<_i2.UserCredential>);

  @override
  _i7.Future<_i3.UserModel> getUser(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [uid],
        ),
        returnValue: _i7.Future<_i3.UserModel>.value(_FakeUserModel_1(
          this,
          Invocation.method(
            #getUser,
            [uid],
          ),
        )),
      ) as _i7.Future<_i3.UserModel>);

  @override
  _i7.Future<_i4.AdminAttributesModel> getAdminAttributes() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAdminAttributes,
          [],
        ),
        returnValue: _i7.Future<_i4.AdminAttributesModel>.value(
            _FakeAdminAttributesModel_2(
          this,
          Invocation.method(
            #getAdminAttributes,
            [],
          ),
        )),
      ) as _i7.Future<_i4.AdminAttributesModel>);

  @override
  _i7.Future<void> updateMuscleGroup(
    int? index,
    String? newValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMuscleGroup,
          [
            index,
            newValue,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteMuscleGroup(String? attributeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMuscleGroup,
          [attributeName],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addEquipmentType(String? newEquipment) =>
      (super.noSuchMethod(
        Invocation.method(
          #addEquipmentType,
          [newEquipment],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateEquipmentType(
    String? oldEquipment,
    String? newEquipment,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEquipmentType,
          [
            oldEquipment,
            newEquipment,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteEquipmentType(String? equipmentToDelete) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEquipmentType,
          [equipmentToDelete],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addMovementPattern(String? newPattern) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMovementPattern,
          [newPattern],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateMovementPattern(
    String? oldPattern,
    String? newPattern,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMovementPattern,
          [
            oldPattern,
            newPattern,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteMovementPattern(String? patternToDelete) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMovementPattern,
          [patternToDelete],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addMuscleGroup(String? newMuscleGroup) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMuscleGroup,
          [newMuscleGroup],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addExerciseModifier(_i4.ExerciseModifier? newModifier) =>
      (super.noSuchMethod(
        Invocation.method(
          #addExerciseModifier,
          [newModifier],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateExerciseModifier(
          _i4.ExerciseModifier? updatedModifier) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateExerciseModifier,
          [updatedModifier],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteExerciseModifier(String? modifierId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteExerciseModifier,
          [modifierId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> assignPlanToClient(_i8.ClientPlanModel? plan) =>
      (super.noSuchMethod(
        Invocation.method(
          #assignPlanToClient,
          [plan],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<int> getTotalWorkoutLogsCount() => (super.noSuchMethod(
        Invocation.method(
          #getTotalWorkoutLogsCount,
          [],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Stream<List<_i9.WorkoutLogModel>> getAllWorkoutLogs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllWorkoutLogs,
          [],
        ),
        returnValue: _i7.Stream<List<_i9.WorkoutLogModel>>.empty(),
      ) as _i7.Stream<List<_i9.WorkoutLogModel>>);

  @override
  _i7.Future<_i10.ExerciseModel?> getExerciseById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExerciseById,
          [id],
        ),
        returnValue: _i7.Future<_i10.ExerciseModel?>.value(),
      ) as _i7.Future<_i10.ExerciseModel?>);

  @override
  _i7.Future<List<_i10.ExerciseModel>> getGlobalExercises() =>
      (super.noSuchMethod(
        Invocation.method(
          #getGlobalExercises,
          [],
        ),
        returnValue:
            _i7.Future<List<_i10.ExerciseModel>>.value(<_i10.ExerciseModel>[]),
      ) as _i7.Future<List<_i10.ExerciseModel>>);

  @override
  _i7.Future<void> saveWorkoutLog(_i9.WorkoutLogModel? workoutLog) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWorkoutLog,
          [workoutLog],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i9.WorkoutLogModel>> getWorkoutLogs(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkoutLogs,
          [userId],
        ),
        returnValue: _i7.Future<List<_i9.WorkoutLogModel>>.value(
            <_i9.WorkoutLogModel>[]),
      ) as _i7.Future<List<_i9.WorkoutLogModel>>);

  @override
  _i7.Future<List<_i8.ClientPlanModel>> getClientPlans(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClientPlans,
          [userId],
        ),
        returnValue: _i7.Future<List<_i8.ClientPlanModel>>.value(
            <_i8.ClientPlanModel>[]),
      ) as _i7.Future<List<_i8.ClientPlanModel>>);

  @override
  _i7.Future<void> addExercise(_i10.ExerciseModel? exercise) =>
      (super.noSuchMethod(
        Invocation.method(
          #addExercise,
          [exercise],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateExercise(_i10.ExerciseModel? exercise) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateExercise,
          [exercise],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteExercise(String? exerciseId) => (super.noSuchMethod(
        Invocation.method(
          #deleteExercise,
          [exerciseId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i5.WorkoutTemplateModel>> getAllWorkoutTemplates() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllWorkoutTemplates,
          [],
        ),
        returnValue: _i7.Future<List<_i5.WorkoutTemplateModel>>.value(
            <_i5.WorkoutTemplateModel>[]),
      ) as _i7.Future<List<_i5.WorkoutTemplateModel>>);

  @override
  _i7.Future<_i8.ClientPlanModel?> getActiveClientPlan(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActiveClientPlan,
          [userId],
        ),
        returnValue: _i7.Future<_i8.ClientPlanModel?>.value(),
      ) as _i7.Future<_i8.ClientPlanModel?>);

  @override
  _i7.Future<_i5.WorkoutTemplateModel> getWorkoutTemplate(String? templateId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkoutTemplate,
          [templateId],
        ),
        returnValue: _i7.Future<_i5.WorkoutTemplateModel>.value(
            _FakeWorkoutTemplateModel_3(
          this,
          Invocation.method(
            #getWorkoutTemplate,
            [templateId],
          ),
        )),
      ) as _i7.Future<_i5.WorkoutTemplateModel>);

  @override
  _i7.Stream<List<_i9.WorkoutLogModel>> getWorkoutLogsStream(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkoutLogsStream,
          [userId],
        ),
        returnValue: _i7.Stream<List<_i9.WorkoutLogModel>>.empty(),
      ) as _i7.Stream<List<_i9.WorkoutLogModel>>);

  @override
  _i7.Future<void> saveWorkoutTemplate(_i5.WorkoutTemplateModel? template) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWorkoutTemplate,
          [template],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i3.UserModel>> getAllUsers() => (super.noSuchMethod(
        Invocation.method(
          #getAllUsers,
          [],
        ),
        returnValue: _i7.Future<List<_i3.UserModel>>.value(<_i3.UserModel>[]),
      ) as _i7.Future<List<_i3.UserModel>>);

  @override
  _i7.Future<void> updateUserStatus(
    String? userId,
    String? newStatus,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserStatus,
          [
            userId,
            newStatus,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<List<_i11.ConversationModel>> getAdminConversationsStream(
          String? adminId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAdminConversationsStream,
          [adminId],
        ),
        returnValue: _i7.Stream<List<_i11.ConversationModel>>.empty(),
      ) as _i7.Stream<List<_i11.ConversationModel>>);

  @override
  _i7.Stream<List<_i11.ConversationModel>> getClientConversationsStream(
          String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getClientConversationsStream,
          [userId],
        ),
        returnValue: _i7.Stream<List<_i11.ConversationModel>>.empty(),
      ) as _i7.Stream<List<_i11.ConversationModel>>);
}
